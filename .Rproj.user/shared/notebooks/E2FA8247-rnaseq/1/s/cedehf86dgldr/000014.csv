"0","library(plyranges)
"
"2","Loading required package: BiocGenerics
"
"2","
Attaching package: ‘BiocGenerics’

"
"2","The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

"
"2","The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, basename, cbind, colnames,
    dirname, do.call, duplicated, eval, evalq, Filter, Find, get,
    grep, grepl, intersect, is.unsorted, lapply, Map, mapply, match,
    mget, order, paste, pmax, pmax.int, pmin, pmin.int, Position,
    rank, rbind, Reduce, rownames, sapply, setdiff, sort, table,
    tapply, union, unique, unsplit, which.max, which.min

"
"2","Loading required package: IRanges
"
"2","Loading required package: S4Vectors
"
"2","Loading required package: stats4
"
"2","
Attaching package: ‘S4Vectors’

"
"2","The following objects are masked from ‘package:base’:

    expand.grid, I, unname

"
"2","Loading required package: GenomicRanges
"
"2","Loading required package: GenomeInfoDb
"
"2","
Attaching package: ‘plyranges’

"
"2","The following object is masked from ‘package:IRanges’:

    slice

"
"2","The following object is masked from ‘package:stats’:

    filter

"
"0","library(""TxDb.Mmusculus.UCSC.mm10.knownGene"")"
"2","Loading required package: GenomicFeatures
"
"2","Loading required package: AnnotationDbi
"
"2","Loading required package: Biobase
"
"2","Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation(""Biobase"")', and for packages 'citation(""pkgname"")'.

"
"2","
Attaching package: ‘AnnotationDbi’

"
"2","The following object is masked from ‘package:plyranges’:

    select

"
"2","Registered S3 methods overwritten by 'dbplyr':
  method         from
  print.tbl_lazy     
  print.tbl_sql      
"
"0","myexons <- exons(TxDb.Mmusculus.UCSC.mm10.knownGene, columns = c(""tx_id"", ""gene_id""))"
"0","myexons$gene_id"
"1","CharacterList"
"1",""
"1"," of length "
"1",""
"1","447558"
"1",""
"1","
"
"1","[[1]]"
"1",""
"1"," "
"1","character(0)
"
"1","[[2]]"
"1",""
"1"," "
"1","character(0)
"
"1","[[3]]"
"1",""
"1"," "
"1","character(0)
"
"1","[[4]]"
"1",""
"1"," "
"1","character(0)
"
"1","[[5]]"
"1",""
"1"," "
"1","character(0)
"
"1","[[6]]"
"1",""
"1"," "
"1","character(0)
"
"1","[[7]]"
"1",""
"1"," "
"1","character(0)
"
"1","[[8]]"
"1",""
"1"," "
"1","character(0)
"
"1","[[9]]"
"1",""
"1"," "
"1","character(0)
"
"1","[[10]]"
"1",""
"1"," "
"1","character(0)
"
"1","...
<"
"1",""
"1","447548"
"1",""
"1"," more elements>
"
"0","myexons <- myexons %>% "
"0","  filter(lengths(gene_id)==1)"
"0",""
"0","dfexons <- as.data.frame(myexons)"
"0","saf <- data.frame(GeneID = dfexons$gene_id, "
"0","                  Char = dfexons$seqnames, "
"0","                  Start = dfexons$start, "
"0","                  End = dfexons$end, "
"0","                  Strand =dfexons$strand)"
"0",""
